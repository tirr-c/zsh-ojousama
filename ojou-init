#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2022 Wonwoo Choi

# An example of type-agnostic script/function, i.e.: the file can be run as a +x
# script or as an autoload function.

# Set the base and typically useful options
emulate -LR zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops rcquotes

# Run as script? ZSH_SCRIPT is a Zsh 5.3 addition
if [[ $0 != template-script || -n $ZSH_SCRIPT ]]; then
    # Handle $0 according to the Zsh Plugin Standard:
    # https://zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html
    0=${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}
    0=${${(M)0##/*}:-$PWD/$0}

    # Such global variable is expected to be typeset'd -g in the plugin.zsh
    # file. Here it's restored in case of the function being run as a script.
    typeset -gA Plugins
    Plugins[ZSH_OJOUSAMA_DIR]=${0:h}

    # In case of the script using other scripts from the plugin, either set up
    # $fpath and autoload, or add the directory to $PATH.
    fpath+=( $Plugins[ZSH_OJOUSAMA_DIR] )
    autoload …

    # OR
    path+=( $Plugins[ZSH_OJOUSAMA_DIR] )
fi

# The script/function contents possibly using $Plugins[ZSH_OJOUSAMA_DIR] …
# …

function .ojou_accept-line() {
    local stripped_buffer=${BUFFER%%[[:blank:]]##}
    if [[ -n $stripped_buffer ]]; then
        if [[ $LANG == *.UTF-8 ]]; then
            PREDISPLAY='お'
            POSTDISPLAY='ですわ〜'
        else
            PREDISPLAY='o'
            POSTDISPLAY=' desuwa~'
        fi
    fi

    zle .ojou_orig_accept-line
}

function zsh-ojousama_plugin_unload() {
    zle -A .ojou_orig_accept-line accept-line
}

zsh-ojousama_plugin_unload 2>/dev/null

zle -A accept-line .ojou_orig_accept-line
zle -N accept-line .ojou_accept-line

# Use alternate marks [[[ and ]]] as the original ones can confuse nested
# substitutions, e.g.: ${${${VAR}}}

# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
